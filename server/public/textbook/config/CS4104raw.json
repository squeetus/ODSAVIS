{
  "title": "OpenDSA entire modules",
  "desc": "OpenDSA entire modules",
  "build_dir": "Books",
  "code_dir": "SourceCode/",
  "code_lang": {
    "Processing": {
      "ext": [
        "pde"
      ],
      "label": "Processing",
      "lang": "java"
    }
  },
  "lang": "en",
  "build_JSAV": false,
  "suppress_todo": false,
  "dispModComp": true,
  "glob_exer_options": {
    "JXOP-debug": "true"
  },
  "chapters": {
    "Preface": {
      "Intro": {
        "long_name": "How to Use this System",
        "sections": {}
      }
    },
    "Introduction": {
      "SeniorAlgAnal/AAIntro": {
        "long_name": "Data and Algorithm Analysis",
        "sections": {}
      },
      "SeniorAlgAnal/ProblemSolving": {
        "long_name": "An Introduction to Problem Solving",
        "sections": {}
      }
    },
    "Mathematical Background": {
      "Background/MathpreIntro": {
        "long_name": "Chapter Introduction",
        "sections": {}
      },
      "Background/SetDef": {
        "long_name": "Set Definitions",
        "sections": {
          "Set Notation": {},
          "Relations": {
            "SetTFrelation": {
              "long_name": "Relations Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 5
            }
          },
          "Equivalence Relations": {
            "SetTFequivrel": {
              "long_name": "Equivalence Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 3
            }
          },
          "Partial Orders": {
            "SetTFpartialorder": {
              "long_name": "PartialOrder Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 3
            }
          }
        }
      },
      "Background/MiscMath": {
        "long_name": "Miscellaneous Notation",
        "sections": {}
      },
      "Background/Logarithms": {
        "long_name": "Logarithms",
        "sections": {
          "Logarithms": {
            "MathLogSumm": {
              "long_name": "Logarithms Practice Questions",
              "required": true,
              "points": 2.0,
              "threshold": 10
            }
          }
        }
      },
      "Background/Summations": {
        "long_name": "Summations",
        "sections": {
          "Summations": {
            "SummationOneToNCON": {
              "long_name": "Summation of the first N Integers visualization",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "SummationTwoPowerICON": {
              "long_name": "Summation Two Power I visualization",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "Background/RecurrenceIntro": {
        "long_name": "Recurrence Relations",
        "sections": {
          "Recurrence Relations": {
            "LinearRecurrencesCON": {
              "long_name": "Linear Recurrences Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "LinearRecurrencesNCON": {
              "long_name": "Linear Recurrences Slideshow (n)",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "Background/Proofs": {
        "long_name": "Mathematical Proof Techniques",
        "sections": {
          "Mathematical Proof Techniques": {
            "twoColorCON": {},
            "TwoColoringProofCON": {
              "long_name": "Two Coloring Proof Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "Background/Estimation": {
        "long_name": "Estimation",
        "sections": {}
      },
      "Background/MathpreSumm": {
        "long_name": "Chapter Summary",
        "sections": {
          "Chapter Summary Questions": {
            "MathBgSumm": {
              "long_name": "Math Background Summary Questions",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      }
    },
    "Algorithm Analysis Basics Refresher": {
      "AlgAnal/AnalPrelim": {
        "long_name": "Problems, Algorithms, and Programs",
        "sections": {
          "Problems, Algorithms, and Programs": {
            "ProblemAlgorithmCON": {
              "long_name": "Problem, Algorithm, and Program definitions Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "AnalPrelimSumm": {
              "long_name": "Problems, Algorithms, Programs Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 4
            }
          }
        }
      },
      "AlgAnal/AnalIntro": {
        "long_name": "Comparing Algorithms",
        "sections": {
          "Comparing Algorithms": {
            "CompareGrowth": {
              "long_name": "Comparing Growth Rates Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 3
            }
          },
          "Growth Rates Ordering Exercise": {
            "GrowthRatesPRO": {
              "long_name": "Growth Rates Ordering Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 3
            }
          }
        }
      },
      "AlgAnal/AnalCases": {
        "long_name": "Best, Average, and Worst Cases",
        "sections": {
          "Best, Worst, and Average Cases": {
            "AnalCasesSameCON": {
              "long_name": "Simple analysis cases slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "AnalCasesDiffCON": {
              "long_name": "Best, Worst, and Average cases slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "AlgAnal/AnalAsymptotic": {
        "long_name": "Asymptotic Analysis and Upper Bounds",
        "sections": {
          "Asymptotic Analysis and Upper Bounds": {
            "UpperBoundCON": {
              "long_name": "Upper Bounds visualization",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "UpperBoundsSumm": {
              "long_name": "Asymptotic Analysis and Upper Bounds Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 4
            }
          }
        }
      },
      "AlgAnal/AnalLower": {
        "long_name": "Lower Bounds and Theta Notation",
        "sections": {
          "Lower Bounds and Theta Notation": {
            "LowerBoundCON": {
              "long_name": "Lower Bounds visualization",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "LowerThetaSumm": {
              "long_name": "Lower Bounds and Theta Notation Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 5
            }
          }
        }
      },
      "AlgAnal/AnalProblem": {
        "long_name": "Analyzing Problems",
        "sections": {
          "Analyzing Problems": {
            "AnalProblemSumm": {
              "long_name": "Problem Analysis Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      },
      "AlgAnal/AnalMisunderstanding": {
        "long_name": "Common Misunderstandings",
        "sections": {
          "Common Misunderstandings": {
            "MisunderstandingsGraphCON": {
              "long_name": "Example's graph Visualization",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "MisSumm": {
              "long_name": "Common Misconceptions Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 4
            }
          }
        }
      },
      "AlgAnal/AnalMultiple": {
        "long_name": "Multiple Parameters",
        "sections": {}
      }
    },
    "Data Structures Basics Refresher": {
      "Binary/CompleteTree": {
        "long_name": "Array Implementation for Complete Trees",
        "sections": {
          "Array Implementation for Complete Binary Trees": {
            "CompleteFIB": {
              "long_name": "Complete Tree Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          }
        }
      },
      "Binary/Heaps": {
        "long_name": "Heaps and Priority Queues",
        "sections": {
          "Heaps and Priority Queues": {
            "heapinsertCON": {
              "long_name": "Heap insert Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "heapinsertPRO": {
              "long_name": "Heap Insert Proficiency Exercise",
              "exer_options": {
                "JXOP-code": "none"
              },
              "required": true,
              "points": 2.0,
              "threshold": 0.90
            }
          },
          "Building a Heap": {
            "heapbuildCON": {
              "long_name": "Heapbuild Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "heapbuildPRO": {
              "long_name": "Heap Build Proficiency Exercise",
              "exer_options": {
                "JXOP-code": "none"
              },
              "required": true,
              "points": 1.0,
              "threshold": 0.90
            },
            "heapbuildProofCON": {
              "long_name": "Heap build analysis proof Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "Removing from the heap": {
            "heapmaxCON": {
              "long_name": "Remove Max Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "heapremovePRO": {
              "long_name": "Heap Remove Exercise",
              "exer_options": {
                "JXOP-code": "none"
              },
              "required": true,
              "points": 2.0,
              "threshold": 0.90
            },
            "heapremoveCON": {
              "long_name": "Remove Any Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "Priority Queues": {
            "HeapSumm": {
              "long_name": "Heap Question Summary",
              "required": true,
              "points": 2.0,
              "threshold": 5
            }
          }
        }
      },
      "General/UnionFind": {
        "long_name": "Union/Find",
        "sections": {
          "The Union/Find Problem": {
            "UFfigCON": {},
            "UFconcomCON": {},
            "ufCON": {
              "long_name": "Union/Find Example",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "pathcompCON": {
              "long_name": "Union/Find Path Compression Example",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "UnionFindPRO": {
              "long_name": "Union/Find Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 0.90
            }
          }
        }
      }
    },
    "Sorting": {
      "Sorting/Mergesort": {
        "long_name": "Mergesort Concepts",
        "sections": {
          "Mergesort Concepts": {
            "mergesortAV": {
              "long_name": "Mergesort Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "mergesortCON": {
              "long_name": "Merging Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "MergesortMergePRO": {
              "long_name": "Mergesort Merging Proficiency Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          },
          "Mergsort Practice Exercise": {
            "mergesortPRO": {
              "long_name": "Mergesort Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 0.90,
              "exer_options": {
                "JXOP-feedback": "continuous",
                "JXOP-fixmode": "fix"
              }
            },
            "MergeSortAnalysisCON": {
              "long_name": "Mergesort Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "Sorting/MergesortImpl": {
        "long_name": "Implementing Mergesort",
        "sections": {
          "Implementing Mergesort": {
            "mergeImplS1CON": {
              "long_name": "Mergesort Implementation Slideshow 1",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "mergeImplS2CON": {
              "long_name": "Mergesort Implementation Slideshow 2",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "MergesortSumm": {
              "long_name": "Mergesort Summary Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      },
      "Sorting/Quicksort": {
        "long_name": "Quicksort",
        "sections": {
          "Introduction": {
            "QuicksortPivotPRO": {
              "long_name": "Quicksort Pivot Proficiency Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          },
          "Partition": {
            "quicksortCON": {
              "long_name": "Quicksort Partition Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "QuicksortPartitPRO": {
              "long_name": "Quicksort Partition Proficiency Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            },
            "QuickSortPartitionAnalysisCON": {
              "long_name": "Quicksort Partition Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "Putting It Together": {
            "quicksortAV": {
              "long_name": "Quicksort Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "quicksortPRO": {
              "long_name": "Quicksort Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 0.90,
              "exer_options": {
                "JXOP-feedback": "continuous",
                "JXOP-fixmode": "fix"
              }
            }
          },
          "Quicksort Analysis": {
            "QuickSortWorstCaseCON": {
              "long_name": "Quicksort Worst Case Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "QuickSortBestCaseCON": {
              "long_name": "Quicksort Best Case Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "QuickSortAverageCaseCON": {
              "long_name": "Quicksort Average Case Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "QuicksortSumm": {
              "long_name": "Quicksort Summary Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      },
      "Sorting/Heapsort": {
        "long_name": "Heapsort",
        "sections": {
          "Heapsort": {
            "heapsortCON": {
              "long_name": "Heapsort Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "HeapsortStepPRO": {
              "long_name": "Heapsort RemoveMax Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 5
            }
          },
          "Heapsort Proficiency Practice": {
            "heapsortPRO": {
              "long_name": "Heapsort Proficiency Exercise",
              "exer_options": {
                "JXOP-code": "none",
                "JXOP-feedback": "continuous",
                "JXOP-fixmode": "fix"
              },
              "required": true,
              "points": 2.0,
              "threshold": 0.9,
              "exer_options": {
                "JXOP-feedback": "continuous",
                "JXOP-fixmode": "fix"
              }
            }
          },
          "Heapsort Analysis": {
            "HeapSortAnalysisCON": {
              "long_name": "Heapsort Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "HeapsortSumm": {
              "long_name": "Heapsort Summary Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      },
      "Sorting/SortingLowerBound": {
        "long_name": "Lower Bounds of Sorting",
        "sections": {
          "Lower Bounds for Sorting": {
            "SortingLowerBoundCON": {
              "long_name": "Sorting Lower Bound Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "SortBoundSumm": {
              "long_name": "Lower Bounds Summary Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 4
            }
          }
        }
      }
    },
    "Spatial Data Structures": {
      "Spatial/Spatial": {
        "long_name": "Spatial Data Structures",
        "sections": {}
      },
      "Spatial/PRquadtree": {
        "long_name": "PR QUadtrees",
        "sections": {}
      },
      "Spatial/KDtree": {
        "long_name": "k-d Trees",
        "sections": {
          "KD Trees": {
            "kd-treeAV": {
              "long_name": "KD tree Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "kd-interact": {
              "long_name": "KD tree Interaction",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            }
          }
        }
      },
      "Spatial/Bintree": {
        "long_name": "Bintrees",
        "sections": {
          "The Bintree": {
            "bintreeCONBTEX": {},
            "bintreeAV": {
              "long_name": "Bintree Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            }
          }
        }
      },
      "Spatial/BintreeNew": {
        "long_name": "Bintrees",
        "sections": {
          "The Bintree": {
            "bintreeCONBTEX": {},
            "bintreeAV": {
              "long_name": "Bintree Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            }
          }
        }
      },
      "Spatial/OtherSpatial": {
        "long_name": "Other Spatial Data Structures",
        "sections": {}
      }
    },
    "Searching": {
      "Development/SearchIntro": {
        "long_name": "Search Chapter Introduction",
        "sections": {}
      },
      "Development/UnsortedSearch": {
        "long_name": "Analyzing Search in Unsorted Arrays",
        "sections": {}
      },
      "Development/SortedSearch": {
        "long_name": "Search in sorted Arrays",
        "sections": {}
      },
      "Development/SelfOrg": {
        "long_name": "Self Organizing Lists",
        "sections": {
          "Introduction": {},
          "Frequency Count": {
            "SelforgCON1": {
              "long_name": "Self-organizing List Slideshow: Frequency Count",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "SelfOrgCounterPro": {
              "long_name": "Self-organizing List Counter Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 0.90,
              "exer_options": {
                "JXOP-feedback": "continuous",
                "JXOP-fixmode": "fix"
              }
            }
          },
          "Move to Front": {
            "SelforgCON2": {
              "long_name": "Self-organizing List Slideshow: Move-to-front",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "SelfOrgMove-to-FrontPro": {
              "long_name": "Self-organizing List Move-to-front Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 0.90,
              "exer_options": {
                "JXOP-feedback": "continuous",
                "JXOP-fixmode": "fix"
              }
            }
          },
          "Transpose": {
            "SelforgCON3": {
              "long_name": "Self-organizing List Slideshow: Transpose",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "SelfOrgTransposePro": {
              "long_name": "Self-organizing List Transpose Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 0.90,
              "exer_options": {
                "JXOP-feedback": "continuous",
                "JXOP-fixmode": "fix"
              }
            }
          },
          "An Example": {}
        }
      }
    },
    "Search Structures": {
      "SearchStruct/SkipList": {
        "long_name": "Skip Lists",
        "sections": {}
      },
      "SearchStruct/BalancedTree": {
        "long_name": "Balanced Trees",
        "sections": {}
      },
      "SearchStruct/AVL": {
        "long_name": "AVL Tree",
        "sections": {}
      },
      "SearchStruct/Splay": {
        "long_name": "Splay Tree",
        "sections": {}
      },
      "SearchStruct/RedBlack": {
        "long_name": "The Red-Black Tree",
        "sections": {
          "Exercise 1": {
            "redBlackTreeColoring": {
              "long_name": "Red-Black Tree Coloring Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 0.90
            }
          },
          "Exercise 2": {
            "redBlackTreePRO": {
              "long_name": "Red-Black Tree Proficiency Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 0.90
            }
          }
        }
      }
    },
    "Advanced Analysis": {
      "Development/AdvSumm": {
        "long_name": "Summation Techniques",
        "sections": {}
      },
      "Development/Recurrence": {
        "long_name": "Solving Recurrence Relations",
        "sections": {
          "Solving Recurrence Relations": {
            "DivideAndConquerRecurrencesCON": {
              "long_name": "Divide-and-Conquer Expansion Slideshow",
              "required": true,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "Development/AmortAnal": {
        "long_name": "Amortized Analysis",
        "sections": {}
      }
    },
    "Algorithms": {
      "Development/DynamicProgramming": {
        "long_name": "Dynamic Programming",
        "sections": {}
      },
      "Development/Knapsack": {
        "sections": {
          "0/1 Knapsack Problem": {
            "sackCallTree": {
              "long_name": "Knapsack Call Tree",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "sackTreePluck": {
              "long_name": "Knapsack Call Tree Pluck",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "sackTraceBack": {
              "long_name": "Knapsack Tree Reduction",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "Exercise 1": {
            "knapsackSelect": {
              "long_name": "Knapsack Select",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          },
          "Exercise 2": {
            "knapsackFillRow": {
              "long_name": "Knapsack Fill Row",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          },
          "Exercise 3": {
            "knapsackSolution": {
              "long_name": "Knapsack Solution",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          },
          "Exercise 4": {
            "sackProficiency": {
              "long_name": "Knapsack Proficiency",
              "required": true,
              "points": 1,
              "threshold": 0.9
            }
          }
        }
      },
      "Development/EditDistance": {
        "sections": {
          "Edit Distance": {
            "editRCT": {
              "long_name": "Edit RCT",
              "required": true,
              "points": 1,
              "threshold": 0.9
            },
            "editPrune": {
              "long_name": "Edit Prune",
              "required": true,
              "points": 1,
              "threshold": 0.9
            },
            "editOptimal": {
              "long_name": "Edit Optimal",
              "required": true,
              "points": 1,
              "threshold": 0.9
            }
          },
          "Exercise 1": {
            "edit-KA1": {
              "long_name": "Edit KA1",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          },
          "Exercise 2": {
            "edit-KA2": {
              "long_name": "Edit KA2",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          }
        }
      },
      "Development/StringSearchKMP": {
        "long_name": "KMP String Search Algorithm",
        "sections": {}
      },
      "Development/StringSearchBoyerMoore": {
        "long_name": "Boyer-Moore String Search Algorithm",
        "sections": {}
      },
      "Development/StringSearchRabinKarp": {
        "long_name": "Rabin-Karp String Search Algorithm",
        "sections": {}
      },
      "Development/RandomIntro": {
        "long_name": "Introduction to Randomized Algorithms",
        "sections": {}
      },
      "Development/RandomNums": {
        "long_name": "Random Numbers",
        "sections": {}
      }
    },
    "Lower Bounds": {
      "Bounds/BoundSearch": {
        "long_name": "Lower Bounds on Search",
        "sections": {}
      },
      "Bounds/BoundMax": {
        "long_name": "Lower Bounds on Search",
        "sections": {}
      },
      "Bounds/BoundAdversary": {
        "long_name": "Adversary Lower Bounds",
        "sections": {}
      },
      "Bounds/BoundState": {
        "long_name": "State Space Lower Bounds",
        "sections": {}
      },
      "Bounds/BoundiBest": {
        "long_name": "Finding ith Best Element",
        "sections": {}
      },
      "Bounds/SortingOptimal": {
        "long_name": "Optimal Sorting",
        "sections": {}
      }
    },
    "Miscellaneous": {
      "Development/Kary": {
        "long_name": "K-ary Tree Implementations",
        "sections": {}
      }
    },
    "Limits to Computing": {
      "NP/LimComp": {
        "long_name": "Chapter Intro: Limits to Computing",
        "sections": {}
      },
      "NP/Reduction": {
        "long_name": "Reductions",
        "sections": {
          "Reductions": {
            "pairToSortReduction": {
              "long_name": "Reduction of Pairing to Sorting",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "sortToPairReduction": {
              "long_name": "Reduction of Sorting to Pairing",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "matrixMulReduction": {
              "long_name": "Matrix Multiplication",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            }
          }
        }
      },
      "NP/NPComplete": {
        "long_name": "NP Completeness",
        "sections": {}
      },
      "NP/circuitSAT": {
        "long_name": "The Circuit Satisfiability problem",
        "sections": {
          "Circuit Satisfiability": {
            "circuitSATCON": {
              "long_name": "Circuit Satisfiability",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/SAT": {
        "long_name": "The Formula Satisfiability problem",
        "sections": {
          "Formula Satisfiability": {
            "SATCON": {
              "long_name": "Formula Satisfiability",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/threeSAT": {
        "long_name": "The 3-CNF Satisfiability problem",
        "sections": {
          "3-CNF Satisfiability": {
            "threeSATCON": {
              "long_name": "3-Satisfiability",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "threeSAT_KA": {
              "long_name": "Practice Exercise for 3-SAT",
              "required": true,
              "points": 1,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/clique": {
        "long_name": "The Clique problem",
        "sections": {
          "The Clique Problem": {
            "cliqueCON": {
              "long_name": "Clique",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "clique_KA": {
              "long_name": "Practice Exercise for Clique",
              "required": true,
              "points": 1,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/independentSet": {
        "long_name": "The Independent Set problem",
        "sections": {
          "Independent Set": {
            "independentSetCON": {
              "long_name": "Independent Set",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "independentSet_KA": {
              "long_name": "Practice Exercise for Independent Set",
              "required": true,
              "points": 1,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/vertexCover": {
        "long_name": "The Independent Set problem",
        "sections": {
          "Vertex Cover": {
            "vertexCoverCON": {
              "long_name": "Vertex Cover",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "vertexCover_KA": {
              "long_name": "Practice Exercise for Vertex Cover",
              "required": true,
              "points": 1,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/hamiltonianCycle": {
        "long_name": "The Hamiltonian Cycle problem",
        "sections": {
          "Hamiltonian Cycle": {
            "hamiltonianCycleCON": {
              "long_name": "Hamiltonian Cycle",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "hamiltonianCycle_KA": {
              "long_name": "Practice Exercise for Hamiltonian Cycle",
              "required": true,
              "points": 1,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/TSP": {
        "long_name": "The Traveling Salesman problem",
        "sections": {
          "Traveling Salesman": {
            "TSPCON": {
              "long_name": "Traveling Salesman",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "TSP_KA": {
              "long_name": "Practice Exercise for Traveling Salesman Problem",
              "required": true,
              "points": 1,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/provingNPC": {
        "long_name": "NP-completeness Proofs",
        "sections": {
          "NP-Completeness Proofs": {
            "NPCProofDiagramCON": {}
          }
        }
      },
      "NP/circuitSAT_to_SAT": {
        "long_name": "Reduction of circuit SAT to SAT.",
        "sections": {
          "Reduction of Circuit SAT to SAT": {
            "circuitSATtoSATCON": {
              "long_name": "Circuit SAT to SAT",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/SAT_to_threeSAT": {
        "long_name": "Reduction of SAT to 3-SAT.",
        "sections": {
          "Reduction of SAT to 3-SAT": {
            "circuitSATtoSATCON": {
              "long_name": "SAT to 3-SAT Reduction",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/threeSAT_to_clique": {
        "long_name": "Reduction of 3-SAT to Clique problem.",
        "sections": {
          "Reduction of 3-SAT to Clique": {
            "circuitSATtoCliqueCON": {
              "long_name": "3-SAT to Clique Reduction",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/clique_to_independentSet": {
        "long_name": "Reduction of Clique to Independent Set",
        "sections": {
          "Clique to Independent Set": {
            "cliqueToISCON": {
              "long_name": "Clique to IS Reduction",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/independentSet_to_vertexCover": {
        "long_name": "Reduction of Independent Set to Vertex Cover",
        "sections": {
          "Independent Set to Vertex Cover": {
            "IStoVCCON": {
              "long_name": "IS to VC Reduction",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/threeSAT_to_hamiltonianCycle": {
        "long_name": "Reduction of 3-SAT to Hamiltonian Cycle Problem.",
        "sections": {
          "3-SAT to Hamiltonian Cycle": {
            "threeSATtoHCCON": {
              "long_name": "3-SAT to HC Reduction",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/hamiltonianCycle_to_TSP": {
        "long_name": "Reduction of Hamiltonian Cycle Problem to TSP.",
        "sections": {
          "Hamiltonian Cycle to Traveling Salesman": {
            "HCtoTSPCON": {
              "long_name": "HC to TSP Reduction",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "NP/NPCoping": {
        "long_name": "Coping with NP-complete problems",
        "sections": {}
      },
      "Development/Impossible": {
        "long_name": "Unsolveable Problems",
        "sections": {}
      }
    },
    "Appendix": {
      "Glossary": {
        "long_name": "Glossary",
        "sections": {}
      },
      "Bibliography": {
        "long_name": "Bibliography",
        "sections": {}
      }
    }
  }
}
